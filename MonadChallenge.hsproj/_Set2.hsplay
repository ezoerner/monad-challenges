-- Haskell Playground 1.0
Just 5
Nothing

headMay []
headMay [1, 2]
headMay [1]

tailMay []
tailMay [1,2]
tailMay [1]

lookupMay 42 []
lookupMay 42 [(42, 1)]
lookupMay 42 [(1, 2)]
lookupMay 42 [(1, 2), (42, 3)]

divMay 4 2
divMay 108 12
divMay 2 4
divMay 42 0

maximumMay []
maximumMay [1]
maximumMay [42, 3]
maximumMay [3, 108, 12]
maximumMay [3, 108, 12, 108]

minimumMay []
minimumMay [1]
minimumMay [42, 3]
minimumMay [108, 3, 12]
minimumMay [108, 3, 12, 3]

greekDataA
greekDataB

queryGreek greekDataA "beta"

queryGreek greekDataA "alpha" == Just 2.0
queryGreek greekDataA "beta" == Nothing
queryGreek greekDataA "gamma" == Just 3.3333333333333335
queryGreek greekDataA "delta" == Nothing
queryGreek greekDataA "zeta" == Nothing

queryGreek greekDataB "rho" == Nothing
queryGreek greekDataB "phi" == Just 0.24528301886792453
queryGreek greekDataB "chi" == Just 9.095238095238095
queryGreek greekDataB "psi" == Nothing
queryGreek greekDataB "omega" == Just 24.0

queryGreek2 greekDataA "beta"

queryGreek2 greekDataA "alpha" == Just 2.0
queryGreek2 greekDataA "beta" == Nothing
queryGreek2 greekDataA "gamma" == Just 3.3333333333333335
queryGreek2 greekDataA "delta" == Nothing
queryGreek2 greekDataA "zeta" == Nothing

queryGreek2 greekDataB "rho" == Nothing
queryGreek2 greekDataB "phi" == Just 0.24528301886792453
queryGreek2 greekDataB "chi" == Just 9.095238095238095
queryGreek2 greekDataB "psi" == Nothing
queryGreek2 greekDataB "omega" == Just 24.0

salaries :: [(String, Integer)]
salaries = [ ("alice", 105000)
           , ("bob", 90000)
           , ("carol", 85000)
           ]
addSalaries salaries "alice" "carol"
addSalaries salaries "bob" "john"
addSalaries2 salaries "alice" "carol"
addSalaries2 salaries "bob" "john"

yLink (+) (Just 1) (Just 5)

tailProd [1, 2, 3]
tailProd [1, 2]
tailProd [1]
tailProd []

tailSum [1, 2, 3]
tailSum [1, 2]
tailSum [1]
tailSum []

combine (Just (Just 1))

tailMax [1, 3, 42]
tailMax [1000, 42]
tailMax [1000]
tailMax []

tailMin [5, 42, 1]
tailMin [1, 42]
tailMin [1000]
tailMin []
